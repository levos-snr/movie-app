{"ast":null,"code":"var _jsxFileName = \"/home/lewis/papareact-challenge/papareact-day3/src/FeaturedMovie.js\";\nimport React, { useState } from \"react\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport Grow from '@material-ui/core/Grow';\nimport Rating from \"@material-ui/lab/Rating\";\nimport Button from \"@material-ui/core/Button\";\nimport TextTruncate from \"react-text-truncate\";\nimport ModalVideo from \"react-modal-video\";\nimport numeral from \"numeral\";\nimport \"./modalVideo.css\";\nimport \"./FeaturedMovie.css\";\n\nfunction FeaturedMovie({\n  title,\n  overlayStyle,\n  featuredMovie,\n  featuredCertification,\n  videoId,\n  setTruncLine,\n  truncLine\n}) {\n  var _featuredMovie$genres;\n\n  const [playing, setPlaying] = useState(false);\n\n  const readMore = e => {\n    setTruncLine(0);\n    e.preventDefault();\n    e.target.style.display = 'none';\n  };\n\n  const getReleaseYear = date => {\n    let year = new Date(date);\n    return year.getFullYear();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__featured\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, videoId && /*#__PURE__*/React.createElement(Grow, {\n    in: playing,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ModalVideo, {\n    channel: \"youtube\",\n    isOpen: \"true\",\n    videoId: videoId,\n    onClose: () => setPlaying(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__overlay\",\n    style: overlayStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"app__featuredInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"app__featuredTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, featuredMovie.title || featuredMovie.original_title || featuredMovie.name || featuredMovie.original_name, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"app__featuredYear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 145\n    }\n  }, \"(\", getReleaseYear(featuredMovie.release_date || featuredMovie.first_air_date), \")\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"app__featuredGenres\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"app__featuredCert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, featuredCertification), featuredMovie === null || featuredMovie === void 0 ? void 0 : (_featuredMovie$genres = featuredMovie.genres) === null || _featuredMovie$genres === void 0 ? void 0 : _featuredMovie$genres.slice(0, 3).map(genre => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"app__featuredGenre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, genre.name))), /*#__PURE__*/React.createElement(TextTruncate, {\n    line: truncLine,\n    element: \"p\",\n    containerClassName: \"app__featuredDesc\",\n    textTruncateChild: /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: readMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 55\n      }\n    }, \"[more]\")),\n    truncateText: \"\\u2026\",\n    text: featuredMovie.overview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }), featuredMovie.number_of_seasons && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"app__seriesSeasons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, featuredMovie.number_of_seasons, \" Seasons, \", featuredMovie.number_of_episodes, \" Episodes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__featuredRating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    name: \"movie-rating\",\n    value: featuredMovie.vote_average / 2,\n    precision: 0.5,\n    icon: /*#__PURE__*/React.createElement(StarRoundedIcon, {\n      fontSize: \"inherit\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 94\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"app__featuredLikes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, numeral(featuredMovie.vote_average / 2).format('0.0'), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 94\n    }\n  }, \" (\", numeral(featuredMovie.vote_count).format('0,0'), \")\"))), /*#__PURE__*/React.createElement(Button, {\n    className: \"app__button\",\n    variant: \"contained\",\n    onClick: () => setPlaying(true),\n    startIcon: /*#__PURE__*/React.createElement(PlayArrowRoundedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 100\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, \"Play Trailer\"));\n}\n\nexport default FeaturedMovie;","map":{"version":3,"sources":["/home/lewis/papareact-challenge/papareact-day3/src/FeaturedMovie.js"],"names":["React","useState","StarRoundedIcon","PlayArrowRoundedIcon","Grow","Rating","Button","TextTruncate","ModalVideo","numeral","FeaturedMovie","title","overlayStyle","featuredMovie","featuredCertification","videoId","setTruncLine","truncLine","playing","setPlaying","readMore","e","preventDefault","target","style","display","getReleaseYear","date","year","Date","getFullYear","original_title","name","original_name","release_date","first_air_date","genres","slice","map","genre","overview","number_of_seasons","number_of_episodes","vote_average","format","vote_count"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\nimport PlayArrowRoundedIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport Grow from '@material-ui/core/Grow';\nimport Rating from \"@material-ui/lab/Rating\";\nimport Button from \"@material-ui/core/Button\";\nimport TextTruncate from \"react-text-truncate\";\nimport ModalVideo from \"react-modal-video\";\nimport numeral from \"numeral\";\nimport \"./modalVideo.css\";\nimport \"./FeaturedMovie.css\";\n\nfunction FeaturedMovie({ title, overlayStyle, featuredMovie, featuredCertification, videoId, setTruncLine, truncLine }) {\n  const [playing, setPlaying] = useState(false);\n\n  const readMore = (e) => {\n    setTruncLine(0);\n    e.preventDefault();\n    e.target.style.display = 'none';\n  }\n\n  const getReleaseYear = (date) => {\n    let year = new Date(date);\n    return year.getFullYear();\n  }\n\n  return (\n    <div className=\"app__featured\">\n\t\t\t{videoId &&\n\t\t\t<Grow in={playing} mountOnEnter unmountOnExit>\n\t\t\t<ModalVideo\n\t\t\t\tchannel='youtube'\n\t\t\t\tisOpen='true'\n\t\t\t\tvideoId={videoId}\n\t\t\t\tonClose={() => setPlaying(false)}\n\t\t\t\t/>\n\t\t\t</Grow>}\n\t\t\t<div className=\"app__overlay\" style={overlayStyle}></div>\n\t\t\t<p className=\"app__featuredInfo\">{title}</p>\n\t\t\t<h2 className=\"app__featuredTitle\">{featuredMovie.title || featuredMovie.original_title || featuredMovie.name || featuredMovie.original_name}<span className=\"app__featuredYear\">({getReleaseYear(featuredMovie.release_date || featuredMovie.first_air_date)})</span></h2>\n\t\t\t<p className=\"app__featuredGenres\">\n\t\t\t\t<span className=\"app__featuredCert\">{featuredCertification}</span>\n\t\t\t\t{featuredMovie?.genres?.slice(0,3).map((genre) => \n\t\t\t\t\t(<span className=\"app__featuredGenre\">{genre.name}</span>)\n\t\t\t\t)}\n\t\t\t</p>\n\t\t\t<TextTruncate\n\t\t\t\tline={truncLine}\n\t\t\t\telement=\"p\"\n\t\t\t\tcontainerClassName=\"app__featuredDesc\"\n\t\t\t\ttextTruncateChild={<a href=\"#\" onClick={readMore}><small>[more]</small></a>}\n\t\t\t\ttruncateText=\"…\" text={featuredMovie.overview}\n\t\t\t/>\n\t\t\t{featuredMovie.number_of_seasons && (\n\t\t\t\t<p className=\"app__seriesSeasons\">\n\t\t\t\t\t{featuredMovie.number_of_seasons} Seasons, {featuredMovie.number_of_episodes} Episodes\n\t\t\t\t</p>\n\t\t\t)}\n\t\t\t<div className=\"app__featuredRating\">\n\t\t\t\t<Rating name=\"movie-rating\" value={featuredMovie.vote_average / 2} precision={0.5} icon={<StarRoundedIcon fontSize=\"inherit\" readOnly />}/>\n\t\t\t\t<p className=\"app__featuredLikes\">{numeral(featuredMovie.vote_average / 2).format('0.0')}<small> ({numeral(featuredMovie.vote_count).format('0,0')})</small></p>\n\t\t\t</div>\n\t\t\t<Button className=\"app__button\" variant=\"contained\" onClick={() => setPlaying(true)} startIcon={<PlayArrowRoundedIcon />}>Play Trailer</Button>\n\t\t</div>\n  )\n}\n\nexport default FeaturedMovie;"]},"metadata":{},"sourceType":"module"}